{% extends '::layout.html.twig' %}
{% block body %}
     <div id="wrapper">
		<div id="header">
			<div class="menu-top-left" style="margin-top:0.5em">
				<ul id="menu-vertical">
					<li class="dropdown">
						<a style="color:#000;font-size:1em;text-transform:uppercase;" href="#" class="dropdown-toggle" data-toggle="dropdown">Pays <span class="caret"></span></a>
						<ul class="dropdown-menu">
							{% for country in countries %}
								<li><a href="{{ path('espace_membre', {'country':country.id}) }}">{{ country.name }}</a></li>
							{% endfor %}
						</ul>
					</li><!--
				 --><li class="dropdown">
				 		<a style="color: #2e2e2e" href="#" class="dropdown-toggle" data-toggle="dropdown"></a>
					</li>
				</ul>
			</div>
			 
			<div class="menu-top-right" style="margin-right:0.3em;margin-top:0.5em;">
				<ul id="menu-vertical">
					<li class="dropdown">
					<a href="" title="Connexion" style="color:#000;font-size:1em;" class="dropdown-toggle" data-toggle="dropdown"><img src="{{ asset('img/profil.jpg') }}"/ width="20px" height="20">&nbsp;&nbsp;{{ app.session.get('user')}}<span class="caret"></span></a>
						<ul class="dropdown-menu" style="margin-left:-5em">
							<li><a href="{{ path('profil-membre',{'user' : app.session.get('user')}) }}"><i class="glyphicon glyphicon-user" style="color:#000;"></i>&nbsp;&nbsp;Profil</a></li>
							<li><a href="{{ path('confidentialite') }}"><i class="glyphicon glyphicon-cog"></i>&nbsp;&nbsp;Confidentialité</a></li>
							<li><a href="{{ path('deconnexion')}}"><i class="glyphicon glyphicon-remove"></i>&nbsp;&nbsp;Déconnexion</a></li>
						</ul>
					</li>
					

				</ul>
			</div>

			
			<div class="header-center-logo" style="margin-left:13em;margin-top:-0.9em">
				<div class="logo">

					<a href="#"><img src="{{ asset('template/img/logo.jpg') }}" /></a>
				</div>
				<div class="recherche" >
					<form action="#" class="form-wrapper cf">
						<div class="form-group">
							<input type="text" id="search"  placeholder="rechercher..." >
						</div>
					</form>																																												
				</div>
			</div>
			<nav class="navbar navbar-default navbar-inverse" style="background:#000;border-radius:0px;margin-top:7em">
				<div class="container-fluid">
					<div class="navbar-header">
						<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
							<span class="sr-only">Toggle navigation</span>
						    	<span class="icon-bar"></span>
						    	<span class="icon-bar"></span>
						    	<span class="icon-bar"></span>
						</button>
						      
					</div>

					<div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
						<ul class="nav navbar-nav">
							<li ><a style="margin-left:4em" href="{{ path('home',{'user':app.session.get('user') }) }}">Home&nbsp;&nbsp;<i class="glyphicon glyphicon-home"></i></a></li>
							<li><a style="padding-left:2em;border-left:1px solid #fff" href="{{ path('liste',{ 'user': app.session.get('user') }) }} " title="Amis">Amis&nbsp;&nbsp;<i class="glyphicon glyphicon-th-list"></i></a></li>
						    <li ><a href="{{ path('liste_msg',{ 'user': app.session.get('user') }) }}" style="padding-left:2em;border-left:1px solid #fff" title="message privé"><div width="100">Messages&nbsp;&nbsp;<i class="glyphicon glyphicon-comment"></i></div></a></li>
						    <li><a href="{{ path('poster',{ 'user' : app.session.get('user')})}}" style="padding-left:2em;border-left:1px solid #fff;text-decoration:underline" title="Poster un article">Poster article&nbsp;&nbsp;<i class="glyphicon glyphicon-file"></i></a></li>
						    <li><a href="" style="padding-left:2em;border-left:1px solid #fff" title="Créer un événement">Créer événement&nbsp;&nbsp;<i class="glyphicon glyphicon-bell"></i></a></li>
						    <li><a href="" style="padding-left:2em;border-left:1px solid #fff;border-right:1px solid #fff" title="Membre premium"><div>Membre premium</div></a></li>
						</ul>
						    
					</div>
				</div><!-- /.container-fluid -->
			</nav>
		</div><!-- slide -->

        <div id="container">
        
			
			<script>
				jQuery(document).ready(function ($) {
					var _SlideshowTransitions = [
					//Fade Fly in R
					{$Duration: 1200, x: -0.3, $During: { $Left: [0.3, 0.7] }, $Easing: { $Left: $JssorEasing$.$EaseInCubic, $Opacity: $JssorEasing$.$EaseLinear }, $Opacity: 2, $Outside: true }
					//Fade Fly out L
					, { $Duration: 1200, x: 0.3, $SlideOut: true, $Easing: { $Left: $JssorEasing$.$EaseInCubic, $Opacity: $JssorEasing$.$EaseLinear }, $Opacity: 2, $Outside: true }
					];

					var _CaptionTransitions = [];
					_CaptionTransitions["L"] = { $Duration: 800, x: 0.6, $Easing: { $Left: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
					_CaptionTransitions["R"] = { $Duration: 800, x: -0.6, $Easing: { $Left: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
					_CaptionTransitions["T"] = { $Duration: 800, y: 0.6, $Easing: { $Top: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
					_CaptionTransitions["B"] = { $Duration: 800, y: -0.6, $Easing: { $Top: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
					_CaptionTransitions["TL"] = { $Duration: 800, x: 0.6, y: 0.6, $Easing: { $Left: $JssorEasing$.$EaseInOutSine, $Top: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
					_CaptionTransitions["TR"] = { $Duration: 800, x: -0.6, y: 0.6, $Easing: { $Left: $JssorEasing$.$EaseInOutSine, $Top: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
					_CaptionTransitions["BL"] = { $Duration: 800, x: 0.6, y: -0.6, $Easing: { $Left: $JssorEasing$.$EaseInOutSine, $Top: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
					_CaptionTransitions["BR"] = { $Duration: 800, x: -0.6, y: -0.6, $Easing: { $Left: $JssorEasing$.$EaseInOutSine, $Top: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };

					_CaptionTransitions["CLIP|LR"] = { $Duration: 600, $Clip: 3, $Easing: $JssorEasing$.$EaseInOutCubic };
					_CaptionTransitions["MCLIP|L"] = { $Duration: 600, $Clip: 1, $Move: true, $Easing: $JssorEasing$.$EaseInOutCubic };
					_CaptionTransitions["LISTH|L"] = { $Duration: 1000, x: 0.8, $Clip: 1, $Easing: $JssorEasing$.$EaseInOutCubic, $ScaleClip: 0.8, $Opacity: 2, $During: { $Left: [0.4, 0.6], $Clip: [0, 0.4], $Opacity: [0.4, 0.6]} };
					_CaptionTransitions["WAVE|L"] = { $Duration: 1300, x: 0.6, y: 0.3, $Easing: { $Left: $JssorEasing$.$EaseLinear, $Top: $JssorEasing$.$EaseInWave }, $Opacity: 2, $Round: { $Top: 2.5} };
					_CaptionTransitions["JUMPDN|R"] = { $Duration: 1000, x: -0.6, y: 0.4, $Easing: { $Left: $JssorEasing$.$EaseLinear, $Top: $JssorEasing$.$EaseOutJump }, $Round: { $Top: 1.5} };
					_CaptionTransitions["DDG|TR"] = { $Duration: 1200, x: -0.3, y: 0.3, $Zoom: 1, $Easing: { $Left: $JssorEasing$.$EaseInJump, $Top: $JssorEasing$.$EaseInJump }, $Opacity: 2, $During: { $Left: [0, 0.8], $Top: [0, 0.8] }, $Round: { $Left: 0.8, $Top: 0.8} };
					_CaptionTransitions["DODGEDANCE|L"] = { $Duration: 1200, x: 0.3, y: -0.3, $Zoom: 1, $Easing: { $Left: $JssorEasing$.$EaseInJump, $Top: $JssorEasing$.$EaseInJump, $Zoom: $JssorEasing$.$EaseOutQuad }, $Opacity: 2, $During: { $Left: [0, 0.8], $Top: [0, 0.8] }, $Round: { $Left: 0.8, $Top: 2.5} };
					_CaptionTransitions["FLUTTER|L"] = { $Duration: 600, x: 0.2, y: -0.1, $Easing: { $Left: $JssorEasing$.$EaseLinear, $Top: $JssorEasing$.$EaseInWave }, $Opacity: 2, $Round: { $Top: 1.3} };
					_CaptionTransitions["TORTUOUS|VB"] = { $Duration: 1200, y: -0.2, $Zoom: 1, $Easing: { $Top: $JssorEasing$.$EaseOutWave, $Zoom: $JssorEasing$.$EaseOutCubic }, $Opacity: 2, $During: { $Top: [0, 0.7] }, $Round: { $Top: 1.3} };
					_CaptionTransitions["FADE"] = { $Duration: 600, $Opacity: 2 };
					_CaptionTransitions["ZMF|10"] = { $Duration: 600, $Zoom: 11, $Easing: { $Zoom: $JssorEasing$.$EaseInExpo, $Opacity: $JssorEasing$.$EaseLinear }, $Opacity: 2 };
					_CaptionTransitions["RTT|10"] = { $Duration: 600, $Zoom: 11, $Rotate: 1, $Easing: { $Zoom: $JssorEasing$.$EaseInExpo, $Opacity: $JssorEasing$.$EaseLinear, $Rotate: $JssorEasing$.$EaseInExpo }, $Opacity: 2, $Round: { $Rotate: 0.8} };
					_CaptionTransitions["RTTL|BR"] = { $Duration: 600, x: -0.6, y: -0.6, $Zoom: 11, $Rotate: 1, $Easing: { $Left: $JssorEasing$.$EaseInCubic, $Top: $JssorEasing$.$EaseInCubic, $Zoom: $JssorEasing$.$EaseInCubic, $Opacity: $JssorEasing$.$EaseLinear, $Rotate: $JssorEasing$.$EaseInCubic }, $Opacity: 2, $Round: { $Rotate: 0.8} };

					var options = {
						$AutoPlay: true,                                    //[Optional] Whether to auto play, to enable slideshow, this option must be set to true, default value is false
						$AutoPlaySteps: 1,                                  //[Optional] Steps to go for each navigation request (this options applys only when slideshow disabled), the default value is 1
						$AutoPlayInterval: 4000,                            //[Optional] Interval (in milliseconds) to go for next slide since the previous stopped if the slider is auto playing, default value is 3000
						$PauseOnHover: 1,                               //[Optional] Whether to pause when mouse over if a slider is auto playing, 0 no pause, 1 pause for desktop, 2 pause for touch device, 3 pause for desktop and touch device, 4 freeze for desktop, 8 freeze for touch device, 12 freeze for desktop and touch device, default value is 1

						$ArrowKeyNavigation: true,   			            //[Optional] Allows keyboard (arrow key) navigation or not, default value is false
						$SlideDuration: 500,                                //[Optional] Specifies default duration (swipe) for slide in milliseconds, default value is 500
						$MinDragOffsetToSlide: 20,                          //[Optional] Minimum drag offset to trigger slide , default value is 20
						//$SlideWidth: 600,                                 //[Optional] Width of every slide in pixels, default value is width of 'slides' container
						//$SlideHeight: 300,                                //[Optional] Height of every slide in pixels, default value is height of 'slides' container
						$SlideSpacing: 0, 					                //[Optional] Space between each slide in pixels, default value is 0
						$DisplayPieces: 1,                                  //[Optional] Number of pieces to display (the slideshow would be disabled if the value is set to greater than 1), the default value is 1
						$ParkingPosition: 0,                                //[Optional] The offset position to park slide (this options applys only when slideshow disabled), default value is 0.
						$UISearchMode: 1,                                   //[Optional] The way (0 parellel, 1 recursive, default value is 1) to search UI components (slides container, loading screen, navigator container, arrow navigator container, thumbnail navigator container etc).
						$PlayOrientation: 1,                                //[Optional] Orientation to play slide (for auto play, navigation), 1 horizental, 2 vertical, 5 horizental reverse, 6 vertical reverse, default value is 1
						$DragOrientation: 3,                                //[Optional] Orientation to drag slide, 0 no drag, 1 horizental, 2 vertical, 3 either, default value is 1 (Note that the $DragOrientation should be the same as $PlayOrientation when $DisplayPieces is greater than 1, or parking position is not 0)

						$SlideshowOptions: {                                //[Optional] Options to specify and enable slideshow or not
							$Class: $JssorSlideshowRunner$,                 //[Required] Class to create instance of slideshow
							$Transitions: _SlideshowTransitions,            //[Required] An array of slideshow transitions to play slideshow
							$TransitionsOrder: 1,                           //[Optional] The way to choose transition to play slide, 1 Sequence, 0 Random
							$ShowLink: true                                    //[Optional] Whether to bring slide link on top of the slider when slideshow is running, default value is false
						},

						$CaptionSliderOptions: {                            //[Optional] Options which specifies how to animate caption
							$Class: $JssorCaptionSlider$,                   //[Required] Class to create instance to animate caption
							$CaptionTransitions: _CaptionTransitions,       //[Required] An array of caption transitions to play caption, see caption transition section at jssor slideshow transition builder
							$PlayInMode: 1,                                 //[Optional] 0 None (no play), 1 Chain (goes after main slide), 3 Chain Flatten (goes after main slide and flatten all caption animations), default value is 1
							$PlayOutMode: 3                                 //[Optional] 0 None (no play), 1 Chain (goes before main slide), 3 Chain Flatten (goes before main slide and flatten all caption animations), default value is 1
						},

						$BulletNavigatorOptions: {                                //[Optional] Options to specify and enable navigator or not
							$Class: $JssorBulletNavigator$,                       //[Required] Class to create navigator instance
							$ChanceToShow: 2,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
							$ActionMode: 3,                                 //[Optional] 0 None, 1 act by click, 2 act by mouse hover, 3 both, default value is 1
							$Lanes: 2,                                      //[Optional] Specify lanes to arrange items, default value is 1
							$SpacingX: 10,                                   //[Optional] Horizontal space between each item in pixel, default value is 0
							$SpacingY: 10                                    //[Optional] Vertical space between each item in pixel, default value is 0
						},

						$ArrowNavigatorOptions: {
							$Class: $JssorArrowNavigator$,              //[Requried] Class to create arrow navigator instance
							$ChanceToShow: 1                                //[Required] 0 Never, 1 Mouse Over, 2 Always
						},

						$ThumbnailNavigatorOptions: {
							$Class: $JssorThumbnailNavigator$,              //[Required] Class to create thumbnail navigator instance
							$ChanceToShow: 2,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
							$ActionMode: 0,                                 //[Optional] 0 None, 1 act by click, 2 act by mouse hover, 3 both, default value is 1
							$DisableDrag: true,                             //[Optional] Disable drag or not, default value is false
							$Orientation: 2                                 //[Optional] Orientation to arrange thumbnails, 1 horizental, 2 vertical, default value is 1
						}
					};

					var jssor_slider1 = new $JssorSlider$("slider1_container", options);
					function ScaleSlider() {
						var parentWidth = jssor_slider1.$Elmt.parentNode.clientWidth;
						if (parentWidth)
							jssor_slider1.$ScaleWidth(Math.min(parentWidth, 940));
						else
							window.setTimeout(ScaleSlider, 30);
					}
					ScaleSlider();

					$(window).bind("load", ScaleSlider);
					$(window).bind("resize", ScaleSlider);
					$(window).bind("orientationchange", ScaleSlider);
				});
			</script>
			
			<br/>
			
            

<div class="container">
	<div class="row">
	<div class="col-md-offset-1 col-md-10">																															
			<div class="page-header">
			  <h2><small style="text-transform:uppercase">publier article</small></h2>
			  <a href="{{ path('publier-article',{ 'user': app.session.get('user') }) }}">Publié /</a>   
			  <a href="{{ path('brouillons-article',{ 'user': app.session.get('user') }) }}">Brouillons /</a>
			  
			</div>
				<form action="{{ path('posterArticles', { 'user': app.session.get('user') }) }}" method="POST" enctype="multipart/form-data">
					<div class="input-group">
						<div class="row">
							<div class="col-md-6">
		      					<div><b>Titre </b></div>
		      					<input  type="text" class="form-control" name="titre_txt" style="border-radius:0px;width:30em" required="required">
		    				</div>
		    				<div class="col-md-6">
		      					<div><b>Source </b></div>
		      					<input  type="text" class="form-control" name="source_txt" style="border-radius:0px;width:30em" required="required">
		      				</div>	
    					</div>
    				</div>
    				</br>
					<div class="input-group">
						<div class="row">
							<div class="col-md-6">
		      					<div><b>Categorie  </b></div>
		      					<select name="categorie_txt" style="border-radius:0px;width:30em" class="form-control">
		      					<option value="" selected>-- S&eacute;lectionnez --</option>  
		      					<option value="1">Sports</option>  
		      					<option value="2">Musique</option>  
		      					<option value="3">Divertissement</option>
		      					<option value="4">High Tech</option>  
		      					<option value="5">Santé</option>
		      					</select>  
		      				</div>
		      				<div class="col-md-6">
		      					<div><b>Auteur </b></div>
		      					<input  type="text" class="form-control" placeholder="Auteur article" name="auteur_txt" style="border-radius:0px;width:30em" required="required">
		      				</div>
		      			</div>
      				
    				</div> 
    				</br>
    				<div class="input-group">
    					<input type="file" name="photo_txt" style="width:30em">
    				</div>
					<div class="input-group">
						<textarea placeholder="Votre contenu" name="contenu_txt" style="width:870px;height:500px">
						</textarea>
					</div>
    				{#
    				<div class="input-group">
				    		{{ form_widget(form) }}

					</br>    
					</div>
					#}
				    <input type="submit" name="save" style="background:#000;text-align:center;border-radius:5px;color:#fff"  value="ENREGISTRER">
					</form>
			<br/>
			</div>
		</div>
		</div>
		</div>
		<div class="footer">
			<br/>
			<ul>
				<li><a href="#"><img src="{{ asset('template/img/tw.jpg') }}" alt="" /></a></li>
				<li><a href="#"><img src="{{ asset('template/img/rss.jpg') }}" alt="" /></a></li>
				<li><a href="#"><img src="{{ asset('template/img/fb.jpg') }}" alt="" /></a></li>
				<li><a href="#"><img src="{{ asset('template/img/p.jpg') }}" alt="" /></a></li>
			</ul>
			
				
			
		</div>	
			<center id="footer"> &copy; 2015 Nucoze</center>
        </div>
    </div>
    <script src="{{ asset('bundles/ivoryckeditor/ckeditor.js') }}" type="text/javascript"></script>
	<script type="text/javascript">

	var j = jQuery.noConflict();
	j(document).ready(function() {
		j('#content').pinterest_grid({
		no_columns: 4,
		padding_x: 10,
		padding_y: 10,
		margin_bottom: 50,
		single_column_breakpoint: 700
		});
		});


;(function ($, window, document, undefined) {
			var pluginName = 'pinterest_grid',
				defaults = {
					padding_x: 10,
					padding_y: 10,
					no_columns: 3,
					margin_bottom: 50,
					single_column_breakpoint: 700
				},
				columns,
				$article,
				article_width;

			function Plugin(element, options) {
				this.element = element;
				this.options = $.extend({}, defaults, options) ;
				this._defaults = defaults;
				this._name = pluginName;
				this.init();
			}

			Plugin.prototype.init = function () {
				var self = this,
					resize_finish;

				$(window).resize(function() {
					clearTimeout(resize_finish);
					resize_finish = setTimeout( function () {
						self.make_layout_change(self);
					}, 11);
				});

				self.make_layout_change(self);

				setTimeout(function() {
					$(window).resize();
				}, 500);
			};

			Plugin.prototype.calculate = function (single_column_mode) {
				var self = this,
					tallest = 0,
					row = 0,
					$container = $(this.element),
					container_width = $container.width();
					$article = $(this.element).children();

				if(single_column_mode === true) {
					article_width = $container.width() - self.options.padding_x;
				} else {
					article_width = ($container.width() - self.options.padding_x * self.options.no_columns) / self.options.no_columns;
				}

				$article.each(function() {
					$(this).css('width', article_width);
				});

				columns = self.options.no_columns;

				$article.each(function(index) {
					var current_column,
						left_out = 0,
						top = 0,
						$this = $(this),
						prevAll = $this.prevAll(),
						tallest = 0;

					if(single_column_mode === false) {
						current_column = (index % columns);
					} else {
						current_column = 0;
					}

					for(var t = 0; t < columns; t++) {
						$this.removeClass('c'+t);
					}

					if(index % columns === 0) {
						row++;
					}

					$this.addClass('c' + current_column);
					$this.addClass('r' + row);

					prevAll.each(function(index) {
						if($(this).hasClass('c' + current_column)) {
							top += $(this).outerHeight() + self.options.padding_y;
						}
					});

					if(single_column_mode === true) {
						left_out = 0;
					} else {
						left_out = (index % columns) * (article_width + self.options.padding_x);
					}

					$this.css({
						'left': left_out,
						'top' : top
					});
				});

				this.tallest($container);
				$(window).resize();
			};

			Plugin.prototype.tallest = function (_container) {
				var column_heights = [],
					largest = 0;

				for(var z = 0; z < columns; z++) {
					var temp_height = 0;
					_container.find('.c'+z).each(function() {
						temp_height += $(this).outerHeight();
					});
					column_heights[z] = temp_height;
				}

				largest = Math.max.apply(Math, column_heights);
				_container.css('height', largest + (this.options.padding_y + this.options.margin_bottom));
			};

			Plugin.prototype.make_layout_change = function (_self) {
				if($(window).width() < _self.options.single_column_breakpoint) {
					_self.calculate(true);
				} else {
					_self.calculate(false);
				}
			};

			$.fn[pluginName] = function (options) {
				return this.each(function () {
					if (!$.data(this, 'plugin_' + pluginName)) {
						$.data(this, 'plugin_' + pluginName,
						new Plugin(this, options));
					}
				});
			}

		})(jQuery, window, document);
</script>	
{% endblock %}
	 
        
{% block stylesheets %}
	
<style>
	

	.recherche #search{
		width:250px;
		border-radius:2px;

	}
	.navbar-nav  li a {
		text-transform:uppercase;
		font-size:1em;
		font-weight:initial;	
		color:#fff;
		margin-left:2em;

	}
	


	.navbar-nav .active a{
		margin-left:8.2em;
	}

	#search:focus{
		width:400px;
		background:#fff;
	}
	#search {
		-webkit-transition:0.5s;
		background:#efefef;
	}

	.pagination ul li{
		display:inline-block;
	}

	#content article p img { 
		width:11.05em;
	}

	#footer{
		color:#2e2e2e;
		font-size:0.7em;
	}

	.menu-top-left ul li a {
		text-transform:uppercase;
		font-size:0.7em;
		color: #2e2e2e;
	}

	#menu-vertical > li li a {
		color: #2e2e2e;
	}
	.active {
		margin-left:2.5em;
	}

	div #header{
		height:150px;
		width:1388px;
		position:fixed;
	}
	.fildariane span a:hover{
		text-decoration:none;
	}
</style>
	
{% endblock %}

